1) Узнать прокси на Windows

Открой PowerShell на том Windows-сервере, где «всё работает»:

# Пользовательские (WinINET) настройки, которые используют IE/Edge/Chrome
Get-ItemProperty 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings' `
| Select ProxyEnable,ProxyServer,ProxyOverride,AutoConfigURL,AutoDetect

# Групповые политики (если заданы админами на весь комп)
Get-ItemProperty 'HKLM:\Software\Policies\Microsoft\Windows\CurrentVersion\Internet Settings' `
| Select *

# Прокси WinHTTP (для сервисов/консолей)
netsh winhttp show proxy


Интерпретация:

ProxyServer → явный прокси: proxy.techpark.local:8080 или http=…;https=….

AutoConfigURL → URL PAC (например http://wpad/.../proxy.pac).

ProxyOverride → bypass (что НЕ через прокси).

netsh winhttp show proxy → иногда пусто; это нормально, если используется PAC.

Если указан PAC

Скачай PAC и посмотри, что он возвращает «по умолчанию»:

$pac = (Get-ItemProperty 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings').AutoConfigURL
Invoke-WebRequest -UseBasicParsing -Uri $pac -OutFile "$env:TEMP\proxy.pac"
notepad "$env:TEMP\proxy.pac"


Внутри ищи строки вида:

return "PROXY proxy.techpark.local:8080; PROXY backup.techpark.local:8080; DIRECT";


Первый PROXY host:port — обычно то, что надо для внешнего интернета (например repo.maven.apache.org).
Если в PAC есть условия, прикинь ветку для внешних доменов (часто всё, что не *.local, идёт через PROXY).

2) Экспорт корпоративного корневого сертификата (если есть MITM)

На Windows (PowerShell от администратора):

# посмотреть кандидатов в хранилище "Доверенные корневые центры"
Get-ChildItem Cert:\LocalMachine\Root | Select Subject, Thumbprint | Sort Subject

# экспорт нужного корня (замени THUMBPRINT на свой)
$thumb = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
Export-Certificate -Cert "Cert:\LocalMachine\Root\$thumb" -FilePath "C:\Temp\corp-rootCA.cer"


Скопируй corp-rootCA.cer на Linux.

3) Настроить прокси на Linux и проверить curl

Подставь ровно те host:port и формат логина, что работают на Windows. Для доменной учётки пробуй оба варианта (какой прошёл в Windows-логах/browsers):

TECHPARK\user_1:pass_1 → в URL это TECHPARK%5Cuser_1:pass_1

user_1@techpark.local:pass_1

# Разовый тест HTTP
curl -I -v --proxy "http://TECHPARK%5Cuser_1:pass_1@proxy.techpark.local:8080" http://example.com --max-time 10

# Разовый тест HTTPS (важно для Maven)
curl -I -vk --proxy "http://TECHPARK%5Cuser_1:pass_1@proxy.techpark.local:8080" https://repo1.maven.org/maven2/ --max-time 15


Если HTTPS выдаёт ошибку про сертификат — установи корневой сертификат (шаг ниже). Если таймаут — чаще это политика прокси/фаервола для CONNECT; в таких контурах обычно есть корпоративное зеркало Nexus/Artifactory — спроси его URL и используй зеркало (см. шаг 5).

Установка корневого сертификата на Linux + в Java
# Система (RHEL)
sudo cp corp-rootCA.cer /etc/pki/ca-trust/source/anchors/
sudo update-ca-trust extract

# Java (JDK 8)
sudo $JAVA_HOME/jre/bin/keytool -importcert -trustcacerts \
  -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit \
  -alias corp-rootCA -file /etc/pki/ca-trust/source/anchors/corp-rootCA.cer -noprompt

4) Настроить Maven на Linux

Минимальный settings.xml для Basic-прокси (помни про экранирование & < > в паролях):

<!-- /root/.m2/settings.xml (если сборка от root) -->
<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0">
  <proxies>
    <proxy>
      <id>corp-https</id><active>true</active>
      <protocol>https</protocol>
      <host>proxy.techpark.local</host><port>8080</port>
      <username>TECHPARK\\user_1</username>
      <password>pass_1</password>
      <nonProxyHosts>localhost|127.0.0.1|*.techpark.local|10.*|192.168.*|172.16.*</nonProxyHosts>
    </proxy>
    <proxy>
      <id>corp-http</id><active>true</active>
      <protocol>http</protocol>
      <host>proxy.techpark.local</host><port>8080</port>
      <username>TECHPARK\\user_1</username>
      <password>pass_1</password>
      <nonProxyHosts>localhost|127.0.0.1|*.techpark.local|10.*|192.168.*|172.16.*</nonProxyHosts>
    </proxy>
  </proxies>
</settings>


Проверка строго через Maven (без Ranger):

mvn -U -X -s /root/.m2/settings.xml \
  dependency:get -Dartifact=org.apache.maven.shared:maven-shared-utils:3.3.4


Если тут качается — прокси/сертификаты готовы, можно собирать Ranger.

5) Если CONNECT наружу всё же режут: использовать корпоративное зеркало

Попроси у админов URL Nexus/Artifactory (например, http://nexus.techpark.local/repository/maven-central/).
Тогда в settings.xml добавь зеркало, и прокси уже не нужен (зеркало внутри сети):

<settings>
  <mirrors>
    <mirror>
      <id>corp-central</id>
      <mirrorOf>*</mirrorOf>
      <url>http://nexus.techpark.local/repository/maven-central/</url>
    </mirror>
  </mirrors>
</settings>


И собирать:

mvn -DskipTests -pl security-admin,ugsync -am clean package

6) Сборка Ranger (когда сеть готова)

Чтобы не упереться в древний нативный модуль:

cd /path/to/apache-ranger-2.7.0
mvn -DskipTests -pl security-admin,ugsync -am clean package
# или почти всё, кроме нативного:
# mvn -DskipTests -Pall -pl '!unixauthnative' -am clean package


Если пришлёшь из Windows:

Get-ItemProperty 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings' `
| Select ProxyEnable,ProxyServer,ProxyOverride,AutoConfigURL,AutoDetect
netsh winhttp show proxy


и первые 10–15 строк PAC (если он есть), я скажу, какой именно host:port ставить на Linux и нужен ли домен в логине. Также, если экспортируешь корневой сертификат (название/Issuer), подкину готовые команды для его установки.
