# Шпаргалка по развёртыванию metric_exporter

## Требования
- Linux x86_64 (amd64) и бинарный файл `metric_exporter_linux`.
- Systemd для управления сервисом (если нужен запуск как служба).
- `/bin/bash` и стандартные утилиты, необходимые вашим скриптам.
- Скрипты должны быть исполняемыми и выводить JSON в stdout.

## Развёртывание
1. Скопируйте `metric_exporter_linux` и каталог со скриптами (например, `/opt/metric_exporter/scripts`) на сервер.
2. Настройте права:
   ```
   sudo mkdir -p /opt/metric_exporter/scripts
   sudo cp metric_exporter_linux /opt/metric_exporter/
   sudo chown -R metrics:metrics /opt/metric_exporter
   sudo chmod 755 /opt/metric_exporter/metric_exporter_linux
   sudo chmod 750 /opt/metric_exporter/scripts
   sudo chmod 750 /opt/metric_exporter/scripts/*
   ```
3. Протестируйте запуск вручную:
   ```
   /opt/metric_exporter/metric_exporter_linux \
     --scripts /opt/metric_exporter/scripts \
     --listen :10005 \
     --path /custom_metrics \
     --cache 300 \
     --script-timeout 90s
   ```

## Системный юнит systemd
Сохраните `/etc/systemd/system/metric_exporter.service`:
```
[Unit]
Description=Custom metrics exporter
After=network-online.target
Requires=network-online.target

[Service]
Type=simple
User=metrics
Group=metrics
ExecStart=/opt/metric_exporter/metric_exporter_linux \
  --scripts /opt/metric_exporter/scripts \
  --listen :10005 \
  --path /custom_metrics \
  --cache 300 \
  --script-timeout 90s
Restart=on-failure
RestartSec=5
AmbientCapabilities=
NoNewPrivileges=yes

[Install]
WantedBy=multi-user.target
```

Активируйте сервис:
```
sudo systemctl daemon-reload
sudo systemctl enable --now metric_exporter.service
sudo systemctl status metric_exporter.service
```

## Аргументы запуска
- `--listen` — адрес и порт, например `:10005` или `0.0.0.0:10005`.
- `--path` — HTTP-путь для выдачи данных (по умолчанию `/custom_metrics`).
- `--scripts` — каталог с исполняемыми скриптами (обязательный параметр).
- `--cache` — время жизни кэша в секундах (0 отключает кэш; пример — `300`).
- `--script-timeout` — таймаут на выполнение одного скрипта (`30s`, `2m` и т.п.).

## Дополнительно
- В Prometheus добавьте job с `metrics_path: /custom_metrics` и target `host:10005`.
- Логи смотрите через `journalctl -u metric_exporter -f`.

